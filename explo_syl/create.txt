--- install ruby 1.9
telecharger ruby-1.9.2-p290.tar.gz
dezipper
cd dans le repertoire
modifier le fichier ext/Setup en activant des modules
./configure
make
make install

installer ruby-mysql  

mysqladmin -u root password xxxx
modifier /etc/my.cnf
datadir = /home/mysql 

mysqladmin -u root -p create sylrplm_development
mysqladmin -u root -p create sylrplm_test
mysqladmin -u root -p create sylrplm_production

rake db:migrate

ruby script/generate scaffold document ident:string type:string revision:string designation:string description:text extension:string repository:string status:string responsible:string group:string date:date
ruby script/generate model document
ruby script/generate controller document
rake db:sessions:create
ruby script/generate mailer PLMMailer toValidate validated
ruby script/generate scaffold sequence object:string value:string min:string max:string

ruby script/generate scaffold subscription designation:string description:text responsible:string group:string oncreate:boolean onupdate:boolean ondestroy:boolean

# plugin pour la pagination 
#script/plugin install git://github.com/mislav/will_paginate.git
#To enable the library your Rails 2.1 (or later) project, use the gem configuration method in ?config/environment.rb?
#Rails::Initializer.run do |config|
#  config.gem 'will_paginate', :version => '~> 2.3.11', :source => 'http://gemcutter.org'
#end
#To install this gem (and all other missing gem dependencies), run rake gems:install (use sudo if necessary). Also, don?t forget to #restart your webserver after editing environment.rb.

#creer le premier user
ruby script/console
User.create(:login=> "dave", :password=>"secret",:password_confirmation => "secret", :role_id=>1, :email=>"sylvani@laposte.net")
User.count
exit

---
--- plugin faq
---

./script/plugin install http://vorlich.ath.cx/code/excited/plugins/faq_u
./script/generate faq
rake db:migrate
atttention, en fait, je l'ai remanie (les vues) pour enlever le format haml
cmd="ruby script/generate scaffold question question:string answer:string position:integer"
echo $cmd
$cmd

---
--- plugin de gestion d'autorisations
---
ruby script/plugin install http://opensvn.csie.org/ezra/rails/plugins/dev/acl_system2

---
--- help perso
---
cmd="ruby script/generate controller help"

---
--- documentation
---
mkdir doc
touch doc/README_FOR_APP
rake doc:app
ou mieux 
rdoc app config db lib public -x lib/openwfe --visibility=protected -t 'SylRPLM application' -U --op /home/syl/trav/rubyonrails/sylrplm_doc/
mise en production:

rake db:migrate RAILS_ENV=production
si pb:
You probably forgot to do: rake db:create:all.
But anyway, read the first lines of schema.rb, for the first time on a production environment you should use: 
rake db:schema:load RAILS_ENV=production

creer la base
mysqladmin -u root create $1_production

charger le schema
rake db:schema:load RAILS_ENV=production

revenir en arriere
rake db:migrate:down VERSION=timestamp
rake db:migrate:reset
doc sur rake
rake -T [db test tmp routes stats rails log notes gems doc]

=======================================================
github

Global setup:

 Download and install Git: http://kernel.org/pub/software/scm/git/RPMS/i386/git-all-1.7.3.2-1.fc11.i386.rpm
 
  git config --global user.name "Your Name"
  git config --global user.email sylvani@laposte.net
  Add your public key: https://github.com/account#keys
        
Next steps:

  mkdir sylrplm
  cd sylrplm
  git init
  touch README
  git add README
  git commit -m 'first commit'
  git remote add origin git@github.com:sylvani/sylrplm.git
  git push origin master
      
  git add .gitignore
  git commit -m 'second commit'
  git push origin master
  
  git add .
  git commit -m 'all commit'
  git push origin master
  
    
===========================================================
generateur de schemas
===========================================================

gem install railroad
dans config linux: install de graphviz pour dot
corriger gems/.../railroad/app_diagram.rb from:
STDOUT.reopen(PLATFORM =~ /mswin/ ? "NUL" : "/dev/null")
to
STDOUT.reopen("/dev/null")

RUBYLIB=. railroad -a -i -M --hide-private | dot -Tsvg > public/mdd/models.svg
RUBYLIB=. railroad -a -i -C --hide-private | dot -Tsvg > public/mdd/controllers.svg
ou
RUBYLIB=. railroad -a -i -M --hide-private | neato -Tpng > public/mdd/models.png
RUBYLIB=. railroad -a -i -C --hide-private | neato -Tpng > public/mdd/controllers.png

new version: https://github.com/preston/railroady.git
gem install railroady
rake diagram:all
railroady [options] command



<%= select(:user, "role", @roles.collect {|p| [ p.title, p.id ] } ) %>

===========================================================
exporter la base en yml
===========================================================
charger le plugin
script/plugin install git://github.com/adamwiggins/yaml_db.git 
#exporter toute la base dans db/data.yml
rake db:data:dump 
#recharger la base
rake db:data:load 
# Create YAML test fixtures from data in an existing database. 
rake db:fixtures:dump 
    
--------------------------------------------------------
lancer une tache regulierement
-------------------------------
> On a *nix server, you'll want to use cron. On a Windows server, you
> might be able to use Scheduled Tasks.

As suggested above, you can use Unix cron / Windows scheduled tasks to
run a Rails rake task.

0 * * * * wget -O - -q http://www.domain.tld/maintenance

http://www.fallenrogue.com/articles/168-Script-vs-Rake

Create a new file in lib/tasks with the extension .rake with your
required task. To invoke it simply cd to your rails directory and run
rake with your task name (optionally specify the Rails environment).
The code inside the task will have full access to your Rails
environment including models.

cd /path/to/rails/application
rake <task_name> RAILS_ENV=production

voir aussi , plus moderne
http://www.igvita.com/2007/03/29/scheduling-tasks-in-ruby-rails/

-----------------------------
scheduler : installe
-----------------------------
https://github.com/jmettraux/rufus-scheduler/
gem install rufus-scheduler


------------------------------
--- hebergement sur heroku
------------------------------
---
--- install heroku
---
[root@localhost sylrplm (master)]# gem install heroku 
---
--- install de la cle 
---
[syl@localhost sylrplm (master)]$ heroku keys:add

Uploading ssh public key /home/syl/.ssh/id_rsa.pub
Enter your Heroku credentials.
Email: sylvere.coutable@laposte.net
Password: pa33zp62
info: passphrase=syl@localhost

---
--- Create your Heroku application
---
heroku create
Creating freezing-stone-916... done, stack is bamboo-mri-1.9.2
http://freezing-stone-916.heroku.com/ | git@heroku.com:freezing-stone-916.git
Git remote heroku added

renommer l'appli freezing-stone-916.heroku.com en sylrplm sur le site heroku https://api.heroku.com/myapps/sylrplm
modifier l'url dans le fichier sylrplm/heroku/.git/config 
url=git@heroku.com:sylrplm.git

---
--- Push your application to Heroku
---
git push heroku master

Warning: Permanently added 'heroku.com,50.19.85.154' (RSA) to the list of known hosts.
Counting objects: 3224, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (1246/1246), done.
Writing objects: 100% (3224/3224), 2.76 MiB | 378 KiB/s, done.
Total 3224 (delta 1993), reused 2983 (delta 1863)
...
-----> Launching... done, v3
       http://freezing-stone-916.heroku.com deployed to Heroku

To git@heroku.com:freezing-stone-916.git
 * [new branch]      master -> master

---
--- Bootstrap your database
---
$ heroku rake db:migrate
(in /app)

---
--- Next Steps
---
Now that your application is running, itâ€™s easy to push updates:

   1. Develop and test changes locally.
   2. Commit code to git.
   3. Push your changes to Heroku with git push heroku.

---
--- essai d'installer ruote dans le projet
---
gem install bundler

--- creation fichier Gemfile:

source "https://github.com/jmettraux/ruote/"
source :rubygems
source :rubyforge
source :gemcutter
gem "ruote", "~>2.1"

bundle install --path vendor

--- pour assurer le dev a plusieurs 
git add Gemfile Gemfile.lock

#puis copier le gem ruote a la place de celui installe ci dessus
copier le contenu de /usr/lib/ruby/gems/1.8/gems/ruote-2.2.0 vers /home/syl/trav/rubyonrails/sylrplm/vendor/ruby/1.8/gems/ruote-2.2.0/

#puis maj git sylrplm
par smartgit (commit puis push)

#puis maj heroku
git push heroku master

# puis poursuite install heroku
heroku rake db:migrate

meme erreur

heroku create
Creating fierce-journey-219... done, stack is bamboo-mri-1.9.2
http://fierce-journey-219.heroku.com/ | git@heroku.com:fierce-journey-219.git
Git remote heroku added

---
--- essai apres copie de openwfe dans le projet (lib/openwfe
---

--- ajouter dans Gemfile
source :rubygems
source :rubyforge
source :gemcutter
source "https://github.com/jmettraux/ruote/"
source "http://gems.github.com"
gem "ruote", ">=2.2"
gem "rufus-verbs"
gem "mislav-will_paginate" , ">= 2.3.6" 
gem "atom-tools" 

heroku rake gems:install

# apres modif Gemfile
bundle update

--- maj heroku
git push heroku master

--- Bootstrap your database
heroku rake db:migrate

# apres modif fichier du projet
git commit -am "heroku migrate";git push heroku;heroku rake db:migrate

-------------------------
--- transfert de la bd vers heroku
-------------------------
--- installer l'outil taps
gem install taps

--- pousser la bd locale vers heroku 
--- le nom est lu dans database.yml
heroku db:push

Loaded Taps v0.3.23
Auto-detected local database: mysql://root:pa33zp62@127.0.0.1/sylrplm_development?encoding=utf8
Enter your Heroku credentials.
Email: sylvere.coutable@laposte.net
Password: 
> freezing-stone-916
Failed to connect to database:
  Sequel::DatabaseConnectionError -> Mysql::Error: Can't connect to MySQL server on '127.0.0.1' (111)

# voir les logs apres acces au site http://freezing-stone-916.heroku.com
# seulement 100 lignes
heroku logs

# pour en voir plus
heroku addons:add logging:basic
heroku logs -n 500

#encore mieux 
heroku addons:upgrade logging:expanded
heroku logs --tail

# eviter les fichiers por ruote
gem install datamapper dm-mysql-adapter --no-ri --no-rdoc

ajouter db/migrate/ruote_expression.rb:
require 'openwfe/extras/expool/ar_expstorage'
class RuoteExpression < OpenWFE::Extras::ExpressionTables
  #
end

git add *;git commit -am "heroku migrate";git push heroku

heroku rake --trace db:migrate VERSION=2011072301

#si ok:
heroku restart

#ou reset de la base
heroku pg:reset SHARED_DATABASE
puis ??? heroku rake db:schema:load

heroku open;heroku logs -n 500
http://sylrplm.heroku.com/

heroku logs -n 500
erreur sur fichier pooltool.ru manquant dans /app/lib
copy du work_development/pooltool.ru dans sylrplm/lib

-- notes sur modifs de remy
Gemfile
notifications.rb : notify devient notify_me
config/initializers/sylrplm_init.rb:  reactive le scheduler des notifications (tres utile)
ruote_plugin: init.rb et ruote_plugin.rb :enlever le worker, engine=db et non fs

--- ca marche !

#mon site dev heroku
https://api.heroku.com/myapps

---
--- ruote-kit remplace ruote_plugin
---
git clone http://github.com/tosch/ruote-kit.git && cd ruote-kit 
bundle install
rackup
(non utilise)

----------------------------------------------------
--- bug dans openwfe/expressions/flowexpression.rb
iv.delete(:@application_context) etait iv.delete('@application_context') ce qui entraiant une erreur sur Mutex
----------------------------------------------------

---
--- plugin barrcode
---
sudo gem install rmagick
sudo gem install gbarcode
ruby script/plugin install http://barcode-generator.googlecode.com/svn/trunk/barcode_generator
pb install des gems
(non utilise)

---
--- recreer la base avec ou sans les migrations
---
--- (schema seul, pas de data, sans les migrations)
rake db:drop;rake db:create;rake db:schema:load 

--- ou (schema par les migrations)
rake db:drop;rake db:create;rake db:migrate 

--- ou (schema+data, il faut db/data.yml)
rake db:drop;rake db:create;rake db:load 

---
--- debug: indiquer la pile des appels
---
puts "********************** pg disconnect!"
	begin 
		a=1
		b=0
		a/b
	rescue Exception=>e
puts "***************"
		e.backtrace.each {|x| puts x}
puts "***************"
	end
	


======================================================
charger des fichiers dans amazon 
======================================================
http://devcenter.heroku.com/articles/s3
http://webtempest.com/how-to-allow-image-uploads-in-rails-on-heroku/

------
utiliser aws-s3 (amazon) pour stocker les vaults
ou fog + carrierwave (gestion des fichiers)
------
creer un compte amazon
http://aws.amazon.com/s3

installer le gem
ajouter dans Gemfile:
	gem "aws-s3"
	ou
	gem "fog", "~> 1.1.2"
bundle update
livrer
FOG_ACCESS_KEY_ID: Identifiant de clÃ© dâ€™accÃ¨s: AKIAIUTZHUXCXNUFDRHQ
FOG_ACCESS_KEY: ClÃ© dâ€™accÃ¨s secrÃ¨te: W2ft89uVn3DqX1qw1WQRKWmpzPZZKZDAV/j2j/0j
new:
FOG_ACCESS_KEY_ID: Identifiant de clÃ© dâ€™accÃ¨s: AWSAccessKeyId = AKIAIUD54MZOYMFWXYEQ
FOG_ACCESS_KEY: ClÃ© dâ€™accÃ¨s secrÃ¨te: AWSSecretKey = /3TLl+gwrWQj/2HGfKWj5ntc3UIQNwjPCGkqDWHG
======================================================
re-installer tout le framework apres un crash disque
======================================================

---
git
---
telecharger git-1.7.8.1.tar.gz
decompresser
cd git-1.7.8.1
./configure
make
su
make install

---
ruby
---
depuis http://www.ruby-lang.org/fr/downloads/
telecharger ruby-1.9.2-p290.tar.gz
decompresser
cd ruby-1.9.2-p290
./configure
make
su
make install

---
rubygems
---
depuis http://rubyforge.org/frs/?group_id=126
telecharger rubygems-1.8.12.tgz
decompresser
cd rubygems-1.8.12
su
ruby setup.rb

---
bundler
---
gem install bundler

---
Pour ne pas avoir Ã  utiliser "bundle exec" avant les commandes installÃ©es par le Gemfile
(sinon toujours lancer les commandes avec "bundle exec" devant)
---
gem install rubygems-bundler
gem regenerate_binstubs

---
prise en compte des gems pre requis dans le Gemfile
---
dans "control center": installer libxml2 et libxslt
bundle install

---
Note bizarre: il est impossible d'utiliser rake > 0.8.7 dÃ» Ã  un bug inconnu causÃ© par ruote

======================================================
EmpÃªcher akonadi de dÃ©marrer avec KDE 4.5
======================================================
Akonadi quand il dÃ©marre prend beaucoup de ressource (surement parce quâ€™il lance aussi nepomukserver), 
pour empÃªcher quâ€™il dÃ©marre il faut aller dans: 
~/.config/akonadi/akonadiserverrc
et modifier:
StartServer=true => StartServer=false
Pour stopper nepomuk passer le gestionnaire de services dans le centre de configuration et dÃ©cocher nepomuk.

======================================================
gestion des vues
une vue comporte 0 a n relations
a l'affichage d'un objet, on affiche toutes les vues possibles 
======================================================
ruby script/generate scaffold view name:string description:text

---
--- chargement des fixtures
---
rake db:fixtures:load FIXTURES_PATH=db/fixtures/admin
rake db:fixtures:load FIXTURES_PATH=db/fixtures/domains/01-mecanique-ameublement/

tests auto: voir capybara

todo: 
associer des groupes aux utilisateurs dans la custo (pas facile car pas de domain sur assoc)
modifier/creer le disque local en donnant un chemin windows et unix , dans sicm.custo (serveur unix ou windows)

sur mandriva: kdewallet , compte=dsone\s45, mot de passe=syl91.ani

---
--- 20/2/2013: install postgresql pour etre compatible remy et heroku (ruby 1.9.3 dans Gemfile)
---
install par ./postgresql-9.2.3-1-linux.run
install dans /opt/PostgreSQL/9.2
donnees dans /home/PostgreSQL
user postgres/passwd
port 5432
date locale
verifier la protection des datas: chmod 0700 /home/PostgreSQL
---
--- puis install du gem pg:
---
export CONFIGURE_ARGS="with-pg_config=/opt/PostgreSQL/9.2/bin/pg_config with-pg-dir=/opt/PostgreSQL/9.2 with-pg-include=/opt/PostgreSQL/9.2/include with-pg-lib=/opt/PostgreSQL/9.2/lib"
gem install pg 
modifier database.yml:
  adapter: postgresql
  username: postgres
  
---
--- maj ruby 1.9.3 pour etre compatible remy et heroku (ruby 1.9.3 dans Gemfile)
---
telecharger ruby-1.9.3-p374.tar.gz
extraire
./configure
make
make install

---
--- modif connecteur postgresql pour eviter les reconnect
---
ajouter la methode suivante au debut de la classe class PostgreSQLAdapter < AbstractAdapter dans le fichier
bundle/ruby/1.9.1/gems/activerecord-2.3.17/lib/active_record/connection_adapters/postgresql_adapter.rb
# sylrplm: pour eviter le rechargement des connexions
def requires_reloading?
	puts "********************************requires_reloading?" 
	false
end

---
--- debug pg insert expression ko car text null
---
--- modifier la methode suivante dans lib/openwfe/extras/expool/ar_expstorage.rb
    # Stores an expression.
    #
    def []= (fei, flow_expression)
     ...
      #TODO syl pour postgresql qui refuse le null
      e.text="text" if e.text.nil?
      
---
--- export et import des custos
---
rake sylrplm:export_domain[../sylrplm_custos_export,sicm.custo]
rake sylrplm:export_domain[../sylrplm_custos_export,sample.table]

--- verifier et deplacer dans une custo par besoin
-recreer la base
rake db:drop;rake db:create
-creer les tables
bundle exec rake db:reset
-remplir la base
bundle exec rake sylrplm:import_domain[db/custos/sicm,sicm.custo_base,limours]
bundle exec rake sylrplm:import_domain[db/custos/sicm,sicm.custo]
bundle exec rake sylrplm:import_domain[db/custos/sicm,sample.table]
bundle exec rake sylrplm:update_access
#pour heroku: 
-recreer la base                                                                                                              
heroku pg:reset HEROKU_POSTGRESQL_ONYX --confirm sylrplm
heroku pg:reset SHARED_DATABASE --confirm sylrplm
-creer les tables
heroku run rake db:reset
-remplir la base
heroku run rake sylrplm:import_domain[db/custos/sicm,sicm.custo_base,limours]
heroku run rake sylrplm:import_domain[db/custos/sicm,sicm.custo]
heroku run rake sylrplm:import_domain[db/custos/sicm,sample.table]
heroku run rake sylrplm:update_access

heroku open;heroku logs -n 500

===========================================================
test
===========================================================

#creation de la base et du schema
rake db:test:load
# copie du schema seul
rake db:test:prepare

echo $PATH
/home/syl/.gem/ruby/1.8/bin:/sbin:/usr/sbin:/bin:/usr/bin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin:/usr/lib/qt4/bin
export PATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin:/usr/lib/qt4/bin
rake db:test:prepare
copie de vendor/plugins/acl_system2/lib/caboose dans lib !!!
#test
ruby test/unit/document_test.rb
1) Error:
test_the_truth(DocumentTest):
ActiveRecord::StatementInvalid: Mysql::Error: Table 'sylrplm_test.utilities' doesn't exist: DELETE FROM `utilities`

ruby script/destroy model utilities

ruby test/unit/document_test.rb
test_the_truth(DocumentTest):
ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'name' in 'field list': INSERT INTO `roles` (`name`, `created_at`, `updated_at`, `id`, `description`) VALUES ('MyString', '2010-12-23 11:37:54', '2010-12-23 11:37:54', 298486374, 'MyText')
modif de test/fixtures/roles.yml et remplacer name par title

ruby test/unit/document_test.rb
test_the_truth(DocumentTest):
ActiveRecord::StatementInvalid: Mysql::Error: Unknown column 'object' in 'field list': INSERT INTO `sequences` (`created_at`, `updated_at`, `max`, `id`, `value`, `min`, `object`) VALUES ('2010-12-23 11:40:51', '2010-12-23 11:40:51', 'MyString', 298486374, 'MyString', 'MyString', 'MyString')
modif de test/fixtures/sequences.yml et remplacer object par utility
modif de test/fixtures/forums.yml et remplacer typeobjects_id par typesobject_id
modif de test/fixtures/accesses.yml et remplacer role_id par roles


=============================================
creer un gem avec select_inout et select_in_list
=============================================
cd rubyonrails
bundle gem sylrplm_ext
cd sylrplm_ext
bundle
rake -T
rake build
$ git remote add origin git@github.com/sylvani/sylrplm_ext
$ git add .
$ git commit -m "First release"
$ git push origin master
rake install
rake release

infos
<%= t(:label_today) %> <%= Date.today %>


reinstall de ruby 2.0.0 depuis le gestionnaire de sources
ruby
ruby-gem
ruby-rake
bigdecimal

gem update --system 1.8.25
gem install bundler
bundle install
gem install activerecord-postgresql-adapter
gem install test-unit

pb postgresql sur utf8:
PG::InvalidParameterValue: ERROR:  new encoding (UTF8) is incompatible with the encoding of the template database (SQL_ASCII)

UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1';
dropdb template1 ou drop database
createdb --encoding=unicode --template=template0 template1
CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF8';
UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1';
\c template1
VACUUM FREEZE;


When integrating with NewRelic, do not enable the SQL query plan instrumentation. 
It can grab a connection that your application is also trying to use... libpq is thread safe, 
so long as two threads do not try to manipulate the same PGonn object 
(http://www.postgresql.org/docs/9.3/static/libpq-threading.html). 
If you see errors such as PG::UnableToSend: insufficient data in "T" message or PG::UnableToSend: extraneous data in "T" message, 
this can indicate that multiple threads are accessing the same connection, and data (or random bytes) may have been transposed between queries.
rechercher database pg with one thread dans google

modif /var/lib/pgsql/data/postgresql.conf
#syl checkpoint_segments = 3		# in logfile segments, min 1, 16MB each
checkpoint_segments = 6

edition par sublime text 3
download et extraction dans /home/softs/sublime_text_3
#pour avoir des icones dans la sidebar
  download de sidebar-folder-icons-for-sublime-text-master
  suivre les instructions en mettant le rep Theme... dans /home/syl/.config/sublime-text-3/Packages
# touche F12 pour reindenter
  preferences->key-bindings->User
  { "keys": ["f12"], "command": "reindent" }


pour maitriser le repertoire th-pg-config=
bundle config build.pg --with-pg-config=<path to pg_config>

workitems edit
<tr class="nhover">
    <td class='nomax' colspan="2"> <%= render :partial => 'shared/ruote_forms', :locals => { :fields => @workitem.field_hash , :fonct=>fonct} %> </td>
  </tr>
  
  apres lancement du process, avant lancement 1ere action
  (fei 0.9.21 engine /tmp/promotion-part20140727-12172-e7kmv9 PLMPromotePart 0 20140727-durosuporu demandeur 0.5.1)
  (fei 0.9.21 engine /tmp/promotion-part20140727-12172-e7kmv9 PLMPromotePart 0 20140727-durosuporu demandeur 0.5.1)
  
  ok
  class SimpleSequence < OpenWFE::ProcessDefinition
  description "a tiny sequence"
  sequence do
    participant 'admin'
    participant 'bob'
  end
end

class PLMPromotePart < OpenWFE::ProcessDefinition
  description "Promotion of a part"
  set :v => "demandeur", :value => "${f:launcher}"
  set :v => "reviewer1", :value => "creator"
  set :v => "reviewer2", :value => "designer"
  set :v => "valideur", :value => "valider"
  #set :v => "publish", :value => "assistant"
  cursor do
    set :f => "comment_createur", :value => "comment demandeur"
    demandeur :activity =>  "Copier objet(s), Commenter"
    back :unless => '${f:comment_createur} != ""'
    plm Ruote::PlmParticipant, :task => "promote", :step => "init", :relation => "applicable"
    plm Ruote::PlmParticipant, :task => "promote", :step => "review", :relation => "reference"
    set :f => "ok", :value => "true"
    set :f => "comment_valideur", :value => "comment valideur"
    valideur :activity =>"commenter puis valider (ok=true) ou (ok=false) non ce document"
    back :if =>  '${f:ok} == false' && '${f:comment_valideur} == ""'
    # back to the reviewers if editor not happy
    rewind :unless =>  '${f:ok}'
    plm Ruote::PlmParticipant, :task => "promote", :step => "exec", :relation => "applicable"
  end
end

pb avec bigdecimal et ruby 2
modifs de certains fichiers

/usr/share/ruby/gems/gems/activesupport-2.3.17/lib/active_support/core_ext/bigdecimal.rb
#syl require 'bigdecimal.so'
require 'bigdecimal/bigdecimal.so'

/usr/share/ruby/gems/gems/activerecord-2.3.17/lib/active_record/connection_adapters/abstract/schema_definitions.rb
et /usr/share/ruby/gems/gems/activerecord-2.3.17/lib/active_record/connection_adapters/abstract_adapter.rb
#syl require 'bigdecimal.so'
require 'bigdecimal/bigdecimal.so'
### n'existe pas !!! require 'bigdecimal/util'

IMPORTANT!  Nokogiri builds and uses a packaged version of libxslt.
If this is a concern for you and you want to use the system library
instead, abort this installation process and reinstall nokogiri as
follows:
    gem install nokogiri -- --use-system-libraries
If you are using Bundler, tell it to use the option:
    bundle config build.nokogiri --use-system-libraries
    bundle install

utiliser /usr/bin/bundle car il lance celui de la 1.9 dans /usr/local/bin/bundle

Post-install message from newrelic_rpm:
# New Relic Ruby Agent Release Notes #

## v3.9.0 ##

* Rack middleware instrumentation

  The Ruby agent now automatically instruments Rack middlewares!

  This means that the agent can now give you a more complete picture of your
  application's response time, including time spent in middleware. It also means
  that requests which previously weren't captured by the agent because they
  never made it to the bottom of your middleware stack (usually a Rails or
  Sinatra application) will now be captured.

  After installing this version of the Ruby agent, you'll see a new 'Middleware'
  band on your application's overview graph, and individual middlewares will
  appear in transaction breakdown charts and transaction traces.

  The agent can instrument middlewares that are added from a config.ru file via
  Rack::Builder, or via Rails' middleware stack in Rails 3.0+.

  This instrumentation may be disabled with the
  disable_middlware_instrumentation configuration setting.

  For more details, see the documentation for this feature:

    - http://docs.newrelic.com/docs/ruby/rack-middlewares
    - http://docs.newrelic.com/docs/ruby/middleware-upgrade-changes

* Capistrano 3.x support

  Recording application deployments using Capistrano 3.x is now supported.

  Many thanks to Jennifer Page for the contribution!

* Better support for Sidekiq's Delayed extensions

  Sidekiq jobs executed via the Delayed extensions (e.g. the #delay method) will
  now be named after the actual class that #delay was invoked against, and will
  have their job arguments correctly captured if the sidekiq.capture_params
  configuration setting is enabled.

  Many thanks to printercu for the contribution!

* Improved Apdex calculation with ignored error classes

  Previously, a transaction resulting in an exception that bubbled up to the top
  level would always be counted as failing for the purposes of Apdex
  calculations (unless the transaction name was ignored entirely). Now,
  exceptions whose classes have been ignored by the
  error_collector.ignore_errors configuration setting will not cause a
  transaction to be automatically counted as failing.

* Allow URIs that are not parseable by stdlib's URI if addressable is present

  There are some URIs that are valid by RFC 3986, but not parseable by Ruby's
  stdlib URI class. The Ruby agent will now attempt to use the addressable gem
  to parse URIs if it is present, allowing requests against these problematic
  URIs to be instrumented.

  Many thanks to Craig R Webster and Amir Yalon for their help with this issue!

* More robust error collection from Resque processes

  Previously, traced errors where the exception class was defined in the Resque
  worker but not in the Resque master process would not be correctly handled by
  the agent. This has been fixed.

* Allow Sinatra apps to set the New Relic environment without setting RACK_ENV

  The NEW_RELIC_ENV environment variable may now be used to specify the
  environment the agent should use from its configuration file, independently of
  RACK_ENV.

  Many thanks to Mario Izquierdo for the contribution!

* Better error handling in Browser Application Monitoring injection

  The agent middleware that injects the JavaScript code necessary for Browser
  Application Monitoring now does a better job of catching errors that might
  occur during the injection process.

* Allow disabling of Net::HTTP instrumentation

  Most instrumentation in the Ruby agent can be disabled easily via a
  configuration setting. Our Net::HTTP instrumentation was previously an
  exception, but now it can also be disabled with the disable_net_http
  configuration setting.

* Make Rails constant presence check more defensive

  The Ruby agent now guards against the (rare) case where an application has a
  Rails constant defined, but no Rails::VERSION constant (because Rails is not
  actually present).

  Many thanks to Vladimir Kiselev for the contribution!

    See https://github.com/newrelic/rpm/blob/master/CHANGELOG for a full list of
    changes.
[syl@localhost sylrplm (master)]$ 

If you see errors such as PG::UnableToSend: insufficient data in "T" message or PG::UnableToSend: extraneous data in "T" message, 
this can indicate that multiple threads are accessing the same connection, and data (or random bytes) may have been transposed between queries.

install de postgres par le download postgresql-9.1.14.tar.bz2
./configure --without-readline  --disable-thread-safety
make
su
make install

su - postgres
mkdir /home/PostgreSQL
chown postgres:postgres /home/PostgreSQL
/usr/local/pgsql/bin/initdb -D /home/PostgreSQL

---------------------------------------------------------------------------------------
a faire au demarrage de la machine, service cree
su - postgres
cd
/usr/local/pgsql/bin/pg_ctl -D /home/PostgreSQL -l logfile start
---------------------------------------------------------------------------------------

bd de test
/usr/local/pgsql/bin/createdb test
/usr/local/pgsql/bin/psql test

export CONFIGURE_ARGS="with-pg_config=/usr/local/pgsql/bin/pg_config"
[syl@localhost sylrplm (master)]$ gem install pg -v '0.14.1' 


traces ruote a la creation d'un process# Logfile created on 2014-08-02 10:02:07 +0200OpenWFE::Extras::DbPersistedEngine 's_engine' - build_scheduler() version is 2.0.24
OpenWFE::CacheExpressionStorage 's_expression_storage' - new() size is 5000
OpenWFE::Extras::DbPersistedEngine 's_engine' - new() --- engine started --- 30976220
OpenWFE::ExpressionPool 's_expression_pool' - reschedule() initiating...
OpenWFE::ExpressionPool 's_expression_pool' - reschedule() for  (fei 0.9.21 engine ee ee 0 0 environment 0)...
OpenWFE::ExpressionPool 's_expression_pool' - reschedule() done. (took 21.245241165161133 ms)
OpenWFE::ParticipantMap 's_participant_map' - register_participant() participant.class Class
OpenWFE::ParticipantMap 's_participant_map' - register_participant() '^plm$'
OpenWFE::ExpressionPool 's_expression_pool' - reschedule() initiating...
OpenWFE::ExpressionPool 's_expression_pool' - reschedule() for  (fei 0.9.21 engine ee ee 0 0 environment 0)...
OpenWFE::ExpressionPool 's_expression_pool' - reschedule() done. (took 6.798982620239258 ms)
OpenWFE::ExpressionPool 's_expression_pool' - s_expression_pool operation :apply on (fei 0.9.21 engine /tmp/promotion-part20140802-30250-1t4cpoo PLMPromotePart 0 20140802-gibochinuro demandeur 0.5.1) failed with
exception : undefined local variable or method `rwi' for #<Class:0x00000003e6f020>
/home/syl/.gem/ruby/gems/activerecord-2.3.17/lib/active_record/base.rb:2002:in `method_missing'
/home/syl/.gem/ruby/gems/will_paginate-2.3.16/lib/will_paginate/finder.rb:170:in `method_missing_with_paginate'
/home/syl/trav/rubyonrails/sylrplm/lib/openwfe/extras/participants/ar_participants.rb:142:in `from_owfe_workitem'
/home/syl/trav/rubyonrails/sylrplm/lib/openwfe/extras/participants/ar_participants.rb:308:in `consume'
/home/syl/trav/rubyonrails/sylrplm/lib/openwfe/participants/participant_map.rb:219:in `do_dispatch'
/home/syl/trav/rubyonrails/sylrplm/lib/openwfe/participants/participant_map.rb:179:in `block in dispatch'

pb ruby-gem:
ruby script/server
...
/home/syl/.gem/ruby/gems/rails-2.3.17/lib/rails/gem_dependency.rb:21:in `add_frozen_gem_path': undefined method `source_index' for Gem:Module (NoMethodError)
        from /home/syl/.gem/ruby/gems/rails-2.3.17/lib/initializer.rb:298:in `add_gem_load_paths'
        from /home/syl/.gem/ruby/gems/rails-2.3.17/lib/initializer.rb:132:in `process'
        from /home/syl/.gem/ruby/gems/rails-2.3.17/lib/initializer.rb:113:in `run'
        from /home/syl/trav/rubyonrails/sylrplm/config/environment.rb:9:in `<top (required)>'
        from /home/syl/.gem/ruby/gems/activesupport-2.3.17/lib/active_support/dependencies.rb:182:in `require'
        from /home/syl/.gem/ruby/gems/activesupport-2.3.17/lib/active_support/dependencies.rb:182:in `block in require'
        from /home/syl/.gem/ruby/gems/activesupport-2.3.17/lib/active_support/dependencies.rb:547:in `new_constants_in'
        from /home/syl/.gem/ruby/gems/activesupport-2.3.17/lib/active_support/dependencies.rb:182:in `require'
        from /home/syl/.gem/ruby/gems/rails-2.3.17/lib/commands/server.rb:84:in `<top (required)>'
        from script/server:3:in `require'
        from script/server:3:in `<main>'
[syl@localhost sylrplm (master)]$ bundle show rails
/home/syl/.gem/ruby/gems/bundler-1.6.5/lib/bundler.rb:301: warning: Insecure world writable dir /home/syl in PATH, mode 040777
/home/syl/.gem/ruby/gems/rails-2.3.17
[syl@localhost sylrplm (master)]$ gem update --system 1.8.25
